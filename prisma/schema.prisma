generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id           Int           @id @default(autoincrement())
  firstName    String
  lastName     String
  phone        String        @unique
  email        String?       @unique
  notes        String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  appointments Appointment[]

  @@map("clients")
}

model Service {
  id           Int           @id @default(autoincrement())
  name         String
  description  String?
  duration     Int
  price        Float
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  appointments Appointment[]

  @@map("services")
}

model Appointment {
  id        Int      @id @default(autoincrement())
  date      DateTime
  clientId  Int
  serviceId Int?
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  duration  Int
  price     Float    @default(0)
  userId    Int?
  client    Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  service   Service? @relation(fields: [serviceId], references: [id])
  user      User?    @relation(fields: [userId], references: [id], onUpdate: NoAction, map: "appointments_userid_fkey")

  @@map("appointments")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  role         String        @default("employee")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  inviteToken  String?
  appointments Appointment[]

  @@map("users")
}
